Є криптовалютна біржа Binance, на якій люди торгують криптою.
Наш сервіс може "підписуватися" на всі оновлення якогось конкретного аккаунту і отримувати сповіщення,
як тільки аккаунт робить якусь дію (наприклад купляє/продає якусь монету (біткоін btc чи щось інше).
Протягом ~місяця наш сервіс отримував всі івенти з певного аккаунту і логував їх.
 Логи зберігаються в html форматі (для зручності перегляду).
 Отже, маємо ~30 хтмл файлів. Маючи логи, ми хочемо побачити наскільки успішним був трейдер (аккаунт) в цьому місяці.
Задача: розпарсити івенти у файлах, відфільтрувати релевантні, і на основі них зробити графік зміни балансу аккаунту.

Я не розказую багато про бізнес-сутності, деталі івентів і процес трейдингу, бо це досить важко зробити текстом і для виконання завдання ці деталі знати не обовязково. Все про процес я зможу розповісти пізніше. Замість цього, зараз я наводжу алгоритм, як і що потрібно рахувати.

Це завдання - одне з тих, які нам потрібно виконати. Тобто, воно принесе реальну користь і принаймні трохи познайомить тебе з сутностями якими ми оперуємо.
Якщо ми почнемо співпрацю, то перші твої завдання будуть пов`язані з ним: доробити, покращити, розширити і т.д.
Важливо розуміти, що в майбутньому цей код буде запускатися регулярно; він може обробляти івенти які приходитимуть з різних місць (напр. БД замість лог-файлу);
 формат візуалізації теж може бути іншим. Май це на увазі, коли будеш писати код.
Кілька класів зі структурою сутностей я прикладаю, але релевантних там всього кілька параметрів, можеш сам вирішувати - потрібні вони тобі чи будеш робити свої. 
Основний критерій, на який я звертатиму увагу - робоча програма. Після цього - стиль і структура.

Трохи деталей: 
1. Нас цікавлять тільки логи аккаунту 'FUTURES_PRODUCER_Kozhukhar'. Інші - не релевантні.
2. Івенти класифікуються на ORDER_TRADE_UPDATE, CONVERT_FUNDS і т.д. - я додам enum з усіма можливими типами івентів.
3. Нас цікавлять тільки FUTURES_ORDER_TRADE_UPDATE і FUTURES_ACCOUNT_UPDATE.
FUTURES_ACCOUNT_UPDATE - показує актуальний стан балансу аккаунту: монети які містить аккаунт і відкриті на даний момент позиції (про позиції пишу нижче).
FUTURES_ORDER_TRADE_UPDATE - створюється, коли аккаунт щось купляє/продає. Містить інформацію по торговій парі: ціна, кількість, статус і т.д. Може мати різні orderStatus, нас цікавить лише orderStatus=FILLED (означає, що заявка на покупку/продажу виконана повністю) - інші можна ігнорувати.
4. Кожен івент (будь-якого типу) обгорнутий у UserDataUpdateEvent - це просто примітивний врапер.
5. Для візуалізації можеш використовувати будь-яку бібліотеку (напр. JFreeChart). Над стильом можеш не заморачуватися.


Алгоритм пошуку релевантних значень балансу: 
balanceChange = new ArrayList();
for i in allEvents.size {
	event = allEvents[i];
	nextEvent = allEvents[i+1];
	if(event.type != FUTURES_ACCOUNT_UPDATE) continue;
	//якщо після АккАпдейту йде ОрдерІвент, який ще не виконаний до кінця - ігноруємо цей АккАпдейт івент 
	if(event.reasonType=ORDER && nextEvent == FUTURES_ORDER_TRADE_UPDATE && nextEvent.orderStatus != FILLED) continue;
	if(nextEvent == FUTURES_ORDER_TRADE_UPDATE && !nextEvent.symbol.contains("USDT")) continue

	define currentBalance;
	currentBalance = event.balances("USDT").crossWalletBalance;
	if(nextEvent.isReduceOnly=false) {
		currentBalance += nextEvent.originalQuantity / nextEvent.price
	}
	balances.add(currentBalance)
}
1. Ітеруємо по івентах - зупиняємося тільки на FUTURES_ACCOUNT_UPDATE. 
2. Якщо причина івенту - трейд (reasonType=ORDER)^ але наступний івент - ще не закінчена операція (orderStatus != FILLED) - пропускаємо.
3. Також пропускаємо всі зміни (івенти) які повязані з торгівлею парами не USDT
4. Далі 2 варіанти: 
	якщо наступий івент - відкриття позиції (isReduceOnly=false), то ми рахуємо баланс як поточне значення балансу + к-сть витрачена на відкриття позиції (на купівлі іншої монети)
	інакше - просто беремо поточне значення балансу
	!!! нас цікавить тільки баланс USDT!!!

В результаті маємо список станів балансу. Його ми можемо використати, щоб побачити наскільки успішно трейдер торгував.
Потрібно візуалізувати зміну балансу (Y - cevf USDT на балансі, X - часова шкала). 

Коли і як ці логи створюються

FUTURES_ACCOUNT_UPDATE ми отримуємо коли відбулася будь-яка зміну балансу аккаунта: deposit, withdraw, trade. Також, обовязково перед якимось виконаним івентом торгу (в якого orderStatus=FILLED) ми отримаємо спочатку FUTURES_ACCOUNT_UPDATE який покаже нам оновлений баланс, а потім інформацію про сам трейд (FUTURES_ORDER_TRADE_UPDATE), який зумовив зміну балансу.


Якщо захочеться, можеш тут трохи почитати про торгівлю Фючерсами - але це більше інформація для "трейдера".
https://cryptonisation.com/detalnoe-rukovodstvo-po-torgovle-na-binance-futures-dlya-novichkov/